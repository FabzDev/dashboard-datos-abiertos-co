{
  "version": 3,
  "sources": ["src/environments/environments.ts", "src/app/services/stations.service.ts", "src/app/components/new-google-map/new-google-map.component.ts", "src/app/components/new-google-map/new-google-map.component.html"],
  "sourcesContent": ["export const environment = {\r\n  DATCOL_KEY: \"B7QNSmnEPL1RSw934Zr9jUEuI\"\r\n}\r\n", "import { inject, Injectable } from '@angular/core';\r\nimport { StationResponse } from '../interfaces/station-response.interface';\r\nimport { StationCoordinates } from '../interfaces/station-coordinates.interface';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, Observable, of, tap } from 'rxjs';\r\nimport { environment } from '../../environments/environments';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StationsService {\r\n  //INJECTIONS\r\n  private http = inject(HttpClient);\r\n\r\n  //PROPERTIES\r\n  private stations: StationResponse[] = [];\r\n  private coords: StationCoordinates[] = [];\r\n\r\n  //METHODS\r\n  constructor(){\r\n  }\r\n\r\n  // obtainCoords(): Observable<StationCoordinates[]> {\r\n  //   return this.http\r\n  //     .get<StationResponse[]>(\r\n  //       `https://www.datos.gov.co/resource/ba2i-v4xx.json?$$app_token=${environment.DATCOL_KEY}&$limit=2000`\r\n  //     )\r\n  //     .pipe(\r\n  //       tap((stationsArray) => (this.stations = stationsArray as StationResponse[])),\r\n  //       map( stationsArray => this.refineCoords(stationsArray)),\r\n  //       tap((coords) => (this.coords = coords))\r\n  //     )\r\n  // }\r\n\r\n  getCoords(): Observable<StationCoordinates[]> {\r\n    return this.http\r\n      .get<StationResponse[]>(\r\n        `https://www.datos.gov.co/resource/ba2i-v4xx.json?$$app_token=${environment.DATCOL_KEY}&$limit=2000`\r\n      )\r\n      .pipe(\r\n        map((stationsArray) => {\r\n          this.stations = stationsArray as StationResponse[];\r\n          return this.refineCoords(stationsArray);\r\n        })\r\n      )\r\n\r\n  }\r\n\r\n  refineCoords(stationsArray: StationResponse[]) {\r\n    return stationsArray\r\n      .map(({ latitud, longitud }) => latitud + '|' + longitud)\r\n      .filter(\r\n        (strCoord, position, strCoordsArr) =>\r\n          position === strCoordsArr.indexOf(strCoord)\r\n      )\r\n      .map((filteredStringCoord) => {\r\n        const [lat, lng] = filteredStringCoord.split('|').map(parseFloat);\r\n        return { lat, lng };\r\n      });\r\n  }\r\n}\r\n", "import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  inject,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { StationsService } from '../../services/stations.service';\r\nimport { StationCoordinates } from '../../interfaces/station-coordinates.interface';\r\nimport { MapAdvancedMarker } from '@angular/google-maps';\r\nimport { map } from 'rxjs';\r\nimport { SidemenuComponent } from '../../shared/sidemenu/sidemenu.component';\r\n\r\n@Component({\r\n  selector: 'component-new-google-map',\r\n  standalone: true,\r\n  imports: [SidemenuComponent],\r\n  templateUrl: './new-google-map.component.html',\r\n  styleUrl: './new-google-map.component.css',\r\n})\r\nexport default class NewGoogleMapComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  private renderer = inject(Renderer2);\r\n  private stationsService = inject(StationsService);\r\n\r\n  @ViewChild('dirmap') divmap!: ElementRef;\r\n  public map?: google.maps.Map | null;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.stationsService.getCoords().subscribe(coords => {\r\n      this.cargar_mapa(coords);\r\n    })\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.map = null;\r\n  }\r\n\r\n  async cargar_mapa(stationsCoords: StationCoordinates[]) {\r\n    const { Map } = (await google.maps.importLibrary('maps')) as google.maps.MapsLibrary;\r\n    const { AdvancedMarkerElement } = (await google.maps.importLibrary('marker')) as google.maps.MarkerLibrary;\r\n\r\n    this.map = new Map(\r\n      this.renderer.selectRootElement(this.divmap.nativeElement),\r\n      {\r\n        center: { lat: 6.230833, lng: -71.590553 },\r\n        zoom: 6,\r\n        mapId: '94ada564329fbd72',\r\n      }\r\n    );\r\n\r\n    for (let coords of stationsCoords) {\r\n      new AdvancedMarkerElement({\r\n        map: this.map,\r\n        position: coords,\r\n      });\r\n    }\r\n\r\n    // const testmarker = new AdvancedMarkerElement({\r\n    //   map: this.map,\r\n    //   position: { lat: 8.230833, lng: -70.590553 },\r\n    // });\r\n\r\n    // this.map.addListener(\"center_changed\", () => {\r\n    //   // 3 seconds after the center of the map has changed, pan back to the\r\n    //   // marker.\r\n    //   window.setTimeout(() => {\r\n    //     this.map.panTo({ lat: 6.230833, lng: -75.590553 });\r\n    //   }, 3000);\r\n    // });\r\n  }\r\n\r\n}\r\n", "  <div class=\"h-screen w-screen\" #dirmap>\r\n  </div>\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAO,IAAM,cAAc;EACzB,YAAY;;;;ACSR,IAAO,mBAAP,MAAO,iBAAe;;EAS1B,cAAA;AAPQ,SAAA,OAAO,OAAO,UAAU;AAGxB,SAAA,WAA8B,CAAA;AAC9B,SAAA,SAA+B,CAAA;EAIvC;;;;;;;;;;;;EAcA,YAAS;AACP,WAAO,KAAK,KACT,IACC,gEAAgE,YAAY,UAAU,cAAc,EAErG,KACC,IAAI,CAAC,kBAAiB;AACpB,WAAK,WAAW;AAChB,aAAO,KAAK,aAAa,aAAa;IACxC,CAAC,CAAC;EAGR;EAEA,aAAa,eAAgC;AAC3C,WAAO,cACJ,IAAI,CAAC,EAAE,SAAS,SAAQ,MAAO,UAAU,MAAM,QAAQ,EACvD,OACC,CAAC,UAAU,UAAU,iBACnB,aAAa,aAAa,QAAQ,QAAQ,CAAC,EAE9C,IAAI,CAAC,wBAAuB;AAC3B,YAAM,CAAC,KAAK,GAAG,IAAI,oBAAoB,MAAM,GAAG,EAAE,IAAI,UAAU;AAChE,aAAO,EAAE,KAAK,IAAG;IACnB,CAAC;EACL;;;mBAjDW,kBAAe;AAAA;oFAAf,kBAAe,SAAf,iBAAe,WAAA,YAFd,OAAM,CAAA;AAEd,IAAO,kBAAP;;;;ACaN,IAAqB,yBAArB,MAAqB,uBAAqB;EAOxC,cAAA;AANQ,SAAA,WAAW,OAAO,SAAS;AAC3B,SAAA,kBAAkB,OAAO,eAAe;EAMhD;EAEA,WAAQ;EACR;EACA,kBAAe;AACb,SAAK,gBAAgB,UAAS,EAAG,UAAU,YAAS;AAClD,WAAK,YAAY,MAAM;IACzB,CAAC;EACH;EACA,cAAW;AACT,SAAK,MAAM;EACb;EAEM,YAAY,gBAAoC;;AACpD,YAAM,EAAE,IAAG,IAAM,MAAM,OAAO,KAAK,cAAc,MAAM;AACvD,YAAM,EAAE,sBAAqB,IAAM,MAAM,OAAO,KAAK,cAAc,QAAQ;AAE3E,WAAK,MAAM,IAAI,IACb,KAAK,SAAS,kBAAkB,KAAK,OAAO,aAAa,GACzD;QACE,QAAQ,EAAE,KAAK,UAAU,KAAK,WAAU;QACxC,MAAM;QACN,OAAO;OACR;AAGH,eAAS,UAAU,gBAAgB;AACjC,YAAI,sBAAsB;UACxB,KAAK,KAAK;UACV,UAAU;SACX;;IAeL;;;;mBArDmB,wBAAqB;AAAA;uFAArB,wBAAqB,WAAA,CAAA,CAAA,0BAAA,CAAA,GAAA,WAAA,SAAA,4BAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;;;;;;;;;ACvBxC,IAAA,oBAAA,GAAA,OAAA,GAAA,CAAA;;;ADuBF,IAAqB,wBAArB;;6EAAqB,uBAAqB,EAAA,WAAA,yBAAA,UAAA,qEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
